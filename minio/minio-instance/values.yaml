minio:
  mode: distributed
  auth:
    rootUser: minio
    rootPassword: password
  statefulset:
    replicaCount: 2
    drivesPerNode: 2
  extraEnvVars:
    - name: MINIO_LOG_LEVEL
      value: "DEBUG"

  provisioning:
    enabled: true
    policies:
      - name: "readonly-policy"
        statements:
          - effect: "Allow"
            actions:
              - "s3:GetObject"
              - "s3:ListBucket"
            resources:
              - "arn:aws:s3:::bucket1"
              - "arn:aws:s3:::bucket1/*"
    users:
      - username: "readonly-user"
        password: "password"
        policies:
          - "readonly-policy"
    extraCommands:
      - mc ls provisioning/bucket1 || mc mb provisioning/bucket1

  persistence:
    enabled: true
    storageClass: standard
    size: 10Gi
  
  ingress:
    enabled: true
    ingressClassName: nginx
    hostname: localhost
    # path: /minio(/.*)?
    # pathType: ImplementationSpecific
    # annotations:
    #   nginx.ingress.kubernetes.io/use-regex: "true"
    #   nginx.ingress.kubernetes.io/rewrite-target: /$1

  metrics:
    enabled: true
    serviceMonitor: 
      enabled: true
      sleepTime: 30s
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: "/minio/v2/metrics/cluster"
      prometheus.io/port: "9000"

veleroBackup:
  enabled: true
  schedule: "*/5 * * * *" # Runs every 5 minutes
  storageClass: standard


backup:
  enabled: false # Use velero instead
  schedule: "*/5 * * * *" # Runs every 5 minutes
  storageClass: standard
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  size: 5Gi
  restartPolicy: Never
  extraCommands:
    - mc alias set local http://localhost:9000 minio password
    - mc ls local/backup || mc mb local/backup


